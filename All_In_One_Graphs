data(cars)
data("mtcars")
View(mtcars)
plot(mtcars$mpg,mtcars$disp)
plot(mtcars$mpg,mtcars$disp,type="p")
round(max(mtcars$mpg))
plot(mtcars$mpg,mtcars$disp,type="p",xlim=round(max(mtcars$mpg)),ylim = max(mtcars$cyl))
max_mpq<-round(max(mtcars$mpg))
plot(mtcars$mpg,mtcars$disp,type="p",xlim=max_mpg,ylim = max(mtcars$cyl))
max_disp<-(max(mtcars$disp))
max_disp
plot(mtcars$mpg,mtcars$disp,type="p",xlim=c(0,max_mpg),ylim = c(0,max_disp))
plot(mtcars$mpg,mtcars$disp,type="p",xlim=c(0,max_mpg),ylim = c(0,max_disp),main = "Mpg vs disp")
plot(mtcars$mpg,mtcars$disp,type="p",xlim=c(0,max_mpg),ylim = c(0,max_disp),main = "Mpg vs disp",xlab="Hourspower",ylab ="distance" )
#type = "p" stand for point
#type = "l" stand for lines
#type = "b" stand for both
#type = "c" stand for lines part along of of "b"
#type = "o" stand for overplotted
#type = "h" stand for histogram like(or high - density verticle lines,
#type = "s" stand for stair steps 
#type = "s" stand for other steps, see Details below
#type = "n" for no plotting 
plot(mtcars$mpg, mtcars$disp,type="p")
plot(mtcars$mpg, mtcars$disp,type="l")
plot(mtcars$mpg, mtcars$disp,type="b")
plot(mtcars$mpg, mtcars$disp,type="c")
plot(mtcars$mpg, mtcars$disp,type="o")
plot(mtcars$mpg, mtcars$disp,type="h")
plot(mtcars$mpg, mtcars$disp,type="s")
plot(mtcars$mpg, mtcars$disp,type="s")
plot(mtcars$mpg, mtcars$disp,type="n")#type = "l" stand for lines
#type = "b" stand for both
#type = "c" stand for lines part along of of "b"
#type = "o" stand for overplotted
#type = "h" stand for histogram like(or high - density verticle lines,
#type = "s" stand for stair steps 
#type = "s" stand for other steps, see Details below
#type = "n" for no plotting 
plot(mtcars$mpg, mtcars$disp,type="p")
plot(mtcars$mpg, mtcars$disp,type="l")
plot(mtcars$mpg, mtcars$disp,type="b")
plot(mtcars$mpg, mtcars$disp,type="c")
plot(mtcars$mpg, mtcars$disp,type="o")
plot(mtcars$mpg, mtcars$disp,type="h")
plot(mtcars$mpg, mtcars$disp,type="s")
plot(mtcars$mpg, mtcars$disp,type="s")
plot(mtcars$mpg, mtcars$disp,type="n")
#par() funtions can be used to set or query graphical parameters.parameters can be set by specifiying them as argument to pair in tag = values form, by passing them as a list of tags values.
names(par())
length(names(par()))
par(mfrow=c(2,2))
plot(anscombe$x1,anscombe$y1)
plot(anscombe$x2,anscombe$y2)
plot(anscombe$x2,anscombe$y2)
plot(anscombe$x2,anscombe$y2)
xmin<-min(anscombe$x1,anscombe$x2,anscombe$x3,anscombe$x4)
xmax<-max(anscombe$x1,anscombe$x2,anscombe$x3,anscombe$x4)
ymin<-min(anscombe$y1,anscombe$y2,anscombe$y3,anscombe$y4)
ymax<-max(anscombe$y1,anscombe$y2,anscombe$y3,anscombe$y4)
plot(anscombe$x1,anscombe$y1,xlim=c(xmin,xmax),ylim=c(ymin,ymax),main="first dataset")
plot(anscombe$x2,anscombe$y2,xlim=c(xmin,xmax),ylim=c(ymin,ymax),main="second dataset")
plot(anscombe$x3,anscombe$y3,xlim=c(xmin,xmax),ylim=c(ymin,ymax),main="third dataset")
plot(anscombe$x4,anscombe$y4,xlim=c(xmin,xmax),ylim=c(ymin,ymax),main="forth dataset")
colors()
rainbow(n)
lines(mtcars$mpg)
points(mtcars$mpg,mtcars$disp,pch="1")
barplot(mtcars$mpg,mtcars$disp,)
hist(mtcars$mpg)
#Colored histogram
hist(mtcars$mpg,breaks=4,col="lightblue",xlab = "x axis",ylab = "y axis")
hist(mtcars$mpg,breaks=4,col=rainbow(5),xlab="x axis",ylab = "y axis")
library(RColorBrewer)
data(VADeaths)
par(mfrow=c(2,3))
hist(VADeaths,breaks=10, col=brewer.pal(3,"Set3"),main="Set3 3 colors")
hist(VADeaths,breaks=3 ,col=brewer.pal(3,"Set2"),main="Set2 3 colors")
hist(VADeaths,breaks=7, col=brewer.pal(3,"Set1"),main="Set1 3 colors")
hist(VADeaths,,breaks= 2, col=brewer.pal(8,"Set3"),main="Set3 8 colors")
hist(VADeaths,col=brewer.pal(8,"Greys"),main="Greys 8 colors")
hist(VADeaths,col=brewer.pal(8,"Greens"),main="Greens 8 colors")
#Simple Line Plot
plot(AirPassengers,type="l") 
barplot(iris$Petal.Length) #Creating simple Bar Graph
barplot(iris$Sepal.Length,col  = brewer.pal(3,"Set1"))
barplot(table(iris$Species,iris$Sepal.Length),col  = brewer.pal(3,"Set1")) 
#Stacked Plot
boxplot(iris$Petal.Length~iris$Species) #Creating Box Plot between two variable
plot(x=iris$Petal.Length) #Simple Scatter Plot
plot(x=iris$Petal.Length,y=iris$Species) #Multivariate Scatter Plot
plot(iris,col=brewer.pal(3,"Set1"))
plot(iris,col=brewer.pal(3,"Set1"))
pie(table(iris$Species))
library(hexbin)
a=hexbin(diamonds$price,diamonds$carat,xbins=40)
library(RColorBrewer)
plot(a)
rf <- colorRampPalette(rev(brewer.pal(40,'Set3')))
hexbinplot(diamonds$price~diamonds$carat, data=diamonds, colramp=rf)
data(HairEyeColor)
mosaicplot(HairEyeColor)
heatmap(as.matrix(mtcars))
image(as.matrix(b[2:7]))
library(magrittr)
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=77.2310, lat=28.6560, popup="The delicious food of chandni chowk")
m  # Print the map
data(iris, package="datasets")
scatter3d(Petal.Width~Petal.Length+Sepal.Length|Species, data=iris, fit="linear"
residuals=TRUE, parallel=FALSE, bg="black", axis.scales=TRUE, grid=TRUE, ellipsoid=FALSE)
attach(iris)# 3d scatterplot by factor level
cloud(Sepal.Length~Sepal.Width*Petal.Length|Species, main="3D Scatterplot by Species")
xyplot(Sepal.Width ~ Sepal.Length, iris, groups = iris$Species, pch= 20)


